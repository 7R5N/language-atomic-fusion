'name': 'Atomic.Fusion'
'scopeName': 'source.text.plist.html.fusion'

'fileTypes': [
	'fusion'
]

'firstLineMatch': '^((prototype)(\\()(\.+)\\:(\.+)(\\)))\\s*<\\s*(prototype)(\\()(\.+)\\:(\.+)(\\))\\s*({)'

'patterns': [
	{
		# PROTOTYPE
		'begin': '^((prototype)(\\()(\.+)(\\:)(\.+)(\\)))\\s*(<)\\s*((prototype)(\\()(\.+)(\\:)(\.+)(\\)))\\s*(\{)$'
		'beginCaptures':
			'1':
				'name': 'meta.method.fusion'
			'2':
				'name': 'meta.tag.fusion'
			'3':
				'name': 'punctation.definition.separator.fusion'
			'4':
				'name': 'punctation.definition.parameter.fusion'
			'5':
				'name': 'punctation.definition.separator.fusion'
			'6':
				'name': 'entity.name.section.fusion'
			'7':
				'name': 'punctation.definition.separator.fusion'
			'8':
				'name': 'punctation.definition.seperator.fusion'
			'9':
				'name': 'meta.method.fusion'
			'10':
				'name': 'meta.tag.fusion'
			'11':
				'name': 'punctation.definition.separator.fusion'
			'12':
				'name': 'punctation.definition.parameter.fusion'
			'13':
				'name': 'punctation.definition.separator.fusion'
			'14':
				'name': 'punctation.definition.parameter.fusion'
			'15':
				'name': 'punctation.definition.separator.fusion'
			'16':
				'name': 'punctuation.definition.array.fusion'
		'end': '^(\})$'
		'endCaptures':
			'1':
				'name': 'punctuation.definition.array.fusion'
		'patterns': [
			{
				# Import HTML Styles
				'include': 'text.html.basic'
			}
			{
				# Comments
				'include': '#comments'
			}
			{
				# Property Styleguide
				'include': '#styleguide'
			}
			{
				# Property Definition Single Line
				'include': '#property-definition-single'
			}
			{
				# Property Definition Multi Line
				'include': '#property-definition-multi'
			}
			{
				# Property Item
				'include': '#property-item'
			}
			{
				# Property Array
				'include': '#property-array'
			}
			{
				# Property Renderer
				'include': '#renderer'
			}
		]
	}
	{
		'match': '\\b(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))\\b'
		'name': 'constant.numeric.fusion'
	}
]

'repository':
	# Properties
	'property-definition-single':
		'match': '^\\s+((\\w+)\\s*(\=)\\s*((\')(\.*)(\')))\\s*$'
		'captures':
			'1':
				'name': 'meta.structure.fusion'
			'2':
				'name': 'entity.other.attribute-name.fusion'
			'3':
				'name': 'punctuation.definition.separator.key-value.fusion'
			'4':
				'name': 'string.fusion'
			'5':
				'name': 'punctuation.definition.parameters.fusion'
			'7':
				'name': 'punctuation.definition.parameters.fusion'
	'property-definition-multi':
		'begin': '^\\s+(\\w+)\\s*(\=)\\s*(\')(\.*[^\'])'
		'beginCaptures':
			'1':
				'name': 'entity.other.attribute-name.fusion'
			'2':
				'name': 'punctuation.definition.separator.key-value.fusion'
			'3':
				'name': 'punctuation.definition.parameters.fusion'
			'4':
				'name': 'string.fusion'
		'end': '\\s*(\')\\s*$'
		'endCaptures':
			'1':
				'name': 'punctuation.definition.parameters.fusion'
		'patterns': [
			{
				# Import HTML Styles
				'include': 'text.html.basic'
			}
		]
	'property-item':
		'begin': '^\\s+((\\w+)\\s*(\=)\\s*(\.*\:(\.+)))\\s*(\{)$'
		'beginCaptures':
			'1':
				'name': 'meta.structure.fusion'
			'2':
				'name': 'entity.other.attribute-name.fusion'
			'3':
				'name': 'punctuation.definition.separator.key-value.fusion'
			'4':
				'name': 'punctation.definition.parameter.fusion'
			'5':
				'name': 'entity.name.section.fusion'
			'6':
				'name': 'punctuation.definition.array.fusion'
		'end': '\\s+(\})\\s*$'
		'patterns': [
			{
				# Property Definition Single Line
				'include': '#property-definition-single'
			}
			{
				# Property Definition Multi Line
				'include': '#property-definition-multi'
			}
			{
				# Import HTML Styles
				'include': 'text.html.basic'
			}
		]
	'property-array':
		'begin': '^\\s+((\\w+)\\s*(\=)\\s*(\.*(\:(Array))))\\s*(\{)$'
		'beginCaptures':
			'1':
				'name': 'meta.structure.fusion'
			'2':
				'name': 'entity.other.attribute-name.fusion'
			'3':
				'name': 'punctuation.definition.separator.key-value.fusion'
			'4':
				'name': 'punctation.definition.parameter.fusion'
			'6':
				'name': 'punctation.definition.parameter.fusion'
			'7':
				'name': 'punctuation.definition.array.fusion'
		'end': '\\s+(\})\\s*$'
		'patterns': [
			{
				# Property Array Item
				'include': '#property-array-item'
			}
			# {
			# 	# Property Definition Single Line
			# 	'include': '#property-definition-single'
			# }
			# {
			# 	# Property Definition Multi Line
			# 	'include': '#property-definition-multi'
			# }
			# {
			# 	# Import HTML Styles
			# 	'include': 'text.html.basic'
			# }
		]
	'property-array-item':
		'begin': '^\\s+((\\d+)\\s*(\=)\\s*((\.+)(\\:)(\.+)))\\s*(\{)$'
		'beginCaptures':
			'1':
				'name': 'meta.structure.fusion'
			'2':
				'name': 'meta.definition.variable.fusion'
			'4':
				'name': 'punctuation.definition.separator.key-value.fusion'
			'5':
				'name': 'punctation.definition.parameter.fusion'
			'6':
				'name': 'punctation.definition.separator.fusion'
			'7':
				'name': 'entity.name.section.fusion'
		'end': '\\s+(\})\\s*$'
		'patterns': [
			{
				# Property Definition Single Line
				'include': '#property-definition-single'
			}
			{
				# Property Definition Multi Line
				'include': '#property-definition-multi'
			}
		]
	# Comments
	'comments':
		'patterns': [
			{
				'match': '\\w+\\s*((//|/\\*).*)'
				'captures':
					'1':
						'name': 'invalid.illegal.fusion'
			}
			{
				'begin': '^(\\s*)(/\\*)'
				'beginCaptures':
					'2':
						'name': 'punctuation.definition.comment.fusion'
				'end': '(\\*/)|^(?!\\s\\1)' # Must be indented by at least one space
				'endCaptures':
					'1':
						'name': 'punctuation.definition.comment.fusion'
				'name': 'comment.block.fusion'
			}
			{
				'begin': '^(\\s*)(//)'
				'beginCaptures':
					'2':
						'name': 'punctuation.definition.comment.fusion'
				'end': '^(?!\\s\\1)' # Must be indented by at least one space
				'name': 'comment.line.fusion'
			}
		]
	# Styleguide
	'styleguide':
		'begin': '^\\s+((@)styleguide\\b)\\s*(\{)'
		'beginCaptures':
			'1':
				'name': 'keyword.control.fusion'
			'3':
				'name': 'punctuation.array.fusion'
		'end': '^\\s+(\})'
		'endCaptures':
			'1':
				'name': 'punctuation.array.fusion'
		'patterns': [
			{
				# Property Definition Single Line
				'include': '#property-definition-single'
			}
			{
				# Property Definition Multi Line
				'include': '#property-definition-multi'
			}
			{
				# Props Listing @Styleguide
				'include': '#props'
			}
		]
	# Props @Styleguide
	'props':
		'begin': '^\\s+(props\\b)\\s*(\{)'
		'beginCaptures':
			'1':
				'name': 'keyword.control.fusion'
			'2':
				'name': 'punctuation.array.fusion'
		'end': '^\\s+(\})'
		'endCaptures':
			'1':
				'name': 'punctuation.array.fusion'
		'patterns': [
			{
				# Property Definition Single Line
				'include': '#property-definition-single'
			}
			{
				# Property Definition Multi Line
				'include': '#property-definition-multi'
			}
			{
				# Property Item
				'include': '#property-item'
			}
			{
				# Property Array
				'include': '#property-array'
			}
		]
	# Renderer
	'renderer':
		'begin': '^\\s+(renderer\\b)\\s*((\=)\\s*([A-Za-z]+)(`))'
		'beginCaptures':
			'1':
				'name': 'keyword.control.fusion'
			'2':
				'name': 'meta.structure.dictionary.value.json.fusion'
			'3':
				'name': 'punctuation.seperator.fusion'
			'4':
				'name': 'keyword.other.special-method.fusion'
			'5':
				'name': 'markup.quote.fusion'
		'end': '^\\s+(`)$'
		'endCaptures':
			'1':
				'name': 'markup.quote.fusion'
		'patterns': [
			{
				# Import HTML Styles
				'include': 'text.html.basic'
			}
		]
