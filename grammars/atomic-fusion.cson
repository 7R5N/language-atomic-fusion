'name': 'Atomic.Fusion'
'scopeName': 'source.text.html.fusion'

'fileTypes': [
	'fusion'
]

'firstLineMatch': '^((prototype)(\\()(\.+)(\\:)(\.+)(\\)))\\s*(<)\\s*((prototype)(\\()(\.+)(\\:)(\.+)(\\)))\\s*(\{)\\s*$'

'patterns': [
	{
		# PROTOTYPE
		'begin': '^((prototype)(\\()(\.+)(\\:)(\.+)(\\)))\\s*(<)\\s*((prototype)(\\()(\.+)(\\:)(\.+)(\\)))\\s*(\{)\\s*$'
		'beginCaptures':
			'1':
				'name': 'prototype.fusion'
			'2':
				'name': 'prototype-keyword.static.fusion'
			'3':
				'name': 'bracket.static.fusion'
			'4':
				'name': 'prototype-path.static.fusion'
			'5':
				'name': 'operator.static.fusion'
			'6':
				'name': 'prototype-component.fusion'
			'7':
				'name': 'bracket.static.fusion'
			'8':
				'name': 'operator.static.fusion'
			'9':
				'name': 'prototype.fusion'
			'10':
				'name': 'prototype-keyword.static.fusion'
			'11':
				'name': 'bracket.static.fusion'
			'12':
				'name': 'prototype-path.static.fusion'
			'13':
				'name': 'operator.static.fusion'
			'14':
				'name': 'prototype-path.static.fusion'
			'15':
				'name': 'bracket.static.fusion'
			'16':
				'name': 'tree.static.fusion'
		'end': '^(\})\\s*$'
		'endCaptures':
			'1':
				'name': 'tree.static.fusion'
		'patterns': [
			{
				# Import HTML Styles
				'include': 'text.html.basic'
			}
			{
				# Comments
				'include': '#comments'
			}
			{
				# Property Styleguide
				'include': '#styleguide'
			}
			{
				# Property Definition Single Line
				'include': '#property-definition-single'
			}
			{
				# Property Definition Multi Line
				'include': '#property-definition-multi'
			}
			{
				# Property Item
				'include': '#property-item'
			}
			{
				# Property Array
				'include': '#property-array'
			}
			{
				# Property Renderer
				'include': '#renderer'
			}
		]
	}
	{
		'match': '\\b(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))\\b'
		'name': 'number.fusion'
	}
]

'repository':
	# Properties
	'property-definition-single':
		'match': '^\\s+((\\w+)\\s*(\=)\\s*(\')(\.*)(\'))\\s*$'
		'captures':
			'1':
				'name': 'property.fusion'
			'2':
				'name': 'property-path.fusion'
			'3':
				'name': 'operator.fusion'
			'4':
				'name': 'quote.fusion'
			'5':
				'name': 'property-value.fusion'
			'6':
				'name': 'quote.fusion'
	'property-definition-multi':
		'begin': '^\\s+(\\w+\\b)\\s*(\=)\\s*(\')\\s*$' # '^\\s+(\\w+)\\s*(\=)\\s*(\')(\.*[^\'])'
		'beginCaptures':
			'1':
				'name': 'property-path.fusion'
			'2':
				'name': 'operator.fusion'
			'3':
				'name': 'quote.fusion'
		'end': '^\\s*(\')\\s*$'
		'endCaptures':
			'1':
				'name': 'quote.fusion'
		'patterns': [
			{
				# Import HTML Styles
				'include': 'text.html.basic'
			}
		]
	'property-item':
		'begin': '^\\s+((\\w+[^\d]\\b)\\s*(\=)\\s*(\.+)(\:)(?![Neos.Fusion:Array])(\.+\\b))\\s*(\{)\\s*$'
		'beginCaptures':
			'1':
				'name': 'property.fusion'
			'2':
				'name': 'property-path.fusion'
			'3':
				'name': 'operator.fusion'
			'4':
				'name': 'punctation.definition.parameter.fusion'
			'5':
				'name': 'entity.name.section.fusion'
			'6':
				'name': 'tree.fusion'
		'end': '^\\s+(\})\\s*$'
		'endCaptures':
			'1':
				'name': 'tree.fusion'
		'patterns': [
			{
				# Property Definition Single Line
				'include': '#property-definition-single'
			}
			{
				# Property Definition Multi Line
				'include': '#property-definition-multi'
			}
			{
				# Import HTML Styles
				'include': 'text.html.basic'
			}
		]
	'property-array':
		'begin': '^\\s+((\\w+\\b)\\s*(\=)\\s*([Neos.Fusion]\\b)(\:)([Array]\\b))\\s*(\{)\\s*$'
		'beginCaptures':
			'1':
				'name': 'property.fusion'
			'2':
				'name': 'property-keyword.fusion'
			'3':
				'name': 'operator.fusion'
			'4':
				'name': 'property-path.fusion'
			'5':
				'name': 'operator.fusion'
			'6':
				'name': 'property-path.fusion'
			'7':
				'name': 'tree.fusion'
		'end': '^\\s+(\})\\s*$'
		'endCaptures':
			'1':
				'name': 'tree.fusion'
		'patterns': [
			{
				# Property Array Item
				'include': '#property-array-item'
			}
		]
	'property-array-item':
		'begin': '^\\s+((\\d+\\b)\\s*(\=)\\s*((\.+)(\\:)(\.+)))\\s*(\{)\\s*$'
		'beginCaptures':
			'1':
				'name': 'property.fusion'
			'2':
				'name': 'number.fusion'
			'3':
				'name': 'operator.fusion'
			'4':
				'name': 'property-path.fusion'
			'5':
				'name': 'operator.fusion'
			'6':
				'name': 'property-component.fusion'
			'7':
				'name': 'tree.fusion'
		'end': '^\\s+(\})\\s*$'
		'endCaptures':
			'1':
				'name': 'tree.fusion'
		'patterns': [
			{
				# Property Definition Single Line
				'include': '#property-definition-single'
			}
			{
				# Property Definition Multi Line
				'include': '#property-definition-multi'
			}
			{
				# Property Item
				'include': '#property-item'
			}
			{
				# Property Array
				'include': '#property-array'
			}
		]
	# Comments
	'comments':
		'patterns': [
			{
				'match': '\\w+\\s*((//|/\\*).*)'
				'captures':
					'1':
						'name': 'invalid.illegal.fusion'
			}
			{
				'begin': '^(\\s*)(/\\*)'
				'beginCaptures':
					'2':
						'name': 'punctuation.definition.comment.fusion'
				'end': '(\\*/)|^(?!\\s\\1)' # Must be indented by at least one space
				'endCaptures':
					'1':
						'name': 'punctuation.definition.comment.fusion'
				'name': 'comment.block.fusion'
			}
			{
				'begin': '^(\\s*)(//)'
				'beginCaptures':
					'2':
						'name': 'punctuation.definition.comment.fusion'
				'end': '^(?!\\s\\1)' # Must be indented by at least one space
				'name': 'comment.line.fusion'
			}
		]
	# Styleguide
	'styleguide':
		'begin': '^\\s+(@styleguide\\b)\\s*(\{)\\s*$'
		'beginCaptures':
			'1':
				'name': 'context.static.fusion'
			'2':
				'name': 'tree.static.fusion'
		'end': '^\\s+(\})'
		'endCaptures':
			'1':
				'name': 'tree.static.fusion'
		'patterns': [
			{
				# Property Definition Single Line
				'include': '#property-definition-single'
			}
			{
				# Property Definition Multi Line
				'include': '#property-definition-multi'
			}
			{
				# Props Listing @Styleguide
				'include': '#props'
			}
		]
	# Props @Styleguide
	'props':
		'begin': '^\\s+(props\\b)\\s*(\{)\\s*$'
		'beginCaptures':
			'1':
				'name': 'context.static.fusion'
			'2':
				'name': 'tree.static.fusion'
		'end': '^\\s+(\})'
		'endCaptures':
			'1':
				'name': 'tree.static.fusion'
		'patterns': [
			{
				# Property Definition Single Line
				'include': '#property-definition-single'
			}
			{
				# Property Definition Multi Line
				'include': '#property-definition-multi'
			}
			{
				# Property Item
				'include': '#property-item'
			}
			{
				# Property Array
				'include': '#property-array'
			}
		]
	# Renderer
	'renderer':
		'begin': '^\\s+(renderer\\b)\\s*(\=)\\s*([A-Za-z]+)(`)\\s*$'
		'beginCaptures':
			'1':
				'name': 'context.static.fusion'
			'2':
				'name': 'operator.static.fusion'
			'3':
				'name': 'language.static.fusion'
			'4':
				'name': 'quote.static.fusion'
		'end': '^([\\s\\S]*)(`)$'
		'endCaptures':
			'2':
				'name': 'quote.static.fusion'
		'patterns': [
			{
				# Import HTML Styles
				'include': 'text.html.basic'
			}
		]
